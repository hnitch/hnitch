name: Update Goodreads

on:
  schedule:
    # Runs every hour
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    name: Update README with Goodreads
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (fetch full history and keep credentials)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Run Goodreads action
        uses: zwacky/goodreads-profile-workflow@v1.2.4
        with:
          goodreads_user_id: "178629903"
          shelf: "read"
          max_books_count: 5

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes if any
        id: commit
        run: |
          # Exit early if no changes
          if [ -z "$(git status --porcelain)" ]; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          git add -A
          git commit -m "Synced and updated with user's goodreads book lists [skip ci]" || true
          echo "no_changes=false" >> $GITHUB_OUTPUT

      - name: Ensure branch and rebase onto remote main before pushing
        if: steps.commit.outputs.no_changes == 'false'
        id: rebase_and_push
        run: |
          set -euo pipefail

          ORIGIN=origin
          TARGET_BRANCH=main
          # Ensure we have the remote branch
          git fetch --no-tags $ORIGIN $TARGET_BRANCH

          # Rebase local changes on top of origin/main (safe)
          if git rev-parse --verify "$ORIGIN/$TARGET_BRANCH" >/dev/null 2>&1; then
            echo "Rebasing onto $ORIGIN/$TARGET_BRANCH..."
            # Try rebase with autostash if available
            if git rebase --autostash "$ORIGIN/$TARGET_BRANCH"; then
              echo "Rebase successful"
            else
              echo "Rebase failed - aborting rebase and switching to fallback (create PR)"
              git rebase --abort || true
              echo "rebase_failed=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          else
            echo "$ORIGIN/$TARGET_BRANCH not found; will attempt to push"
          fi

          # Try pushing up to two times (handles intermittent race)
          PUSH_OK=false
          for i in 1 2; do
            if git push $ORIGIN HEAD:$TARGET_BRANCH; then
              echo "push_ok=true" >> $GITHUB_OUTPUT
              PUSH_OK=true
              break
            else
              echo "push attempt $i failed; fetching and retrying rebase..."
              git fetch --no-tags $ORIGIN $TARGET_BRANCH
              git rebase --autostash "$ORIGIN/$TARGET_BRANCH" || { echo "rebase failed during retry"; git rebase --abort || true; break; }
            fi
          done

          if [ "$PUSH_OK" = "false" ]; then
            echo "Failed to push after retries; will create a pull request instead"
            echo "push_ok=false" >> $GITHUB_OUTPUT
          fi

      - name: Create a pull request if rebase failed or push blocked
        if: steps.rebase_and_push.outputs.rebase_failed == 'true' || steps.rebase_and_push.outputs.push_ok == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Synced and updated with user's goodreads book lists"
          title: "Goodreads sync: update README"
          body: |
            The automated Goodreads sync produced changes that could not be pushed directly
            because the remote main branch had diverged or branch protection prevents direct pushes.
            This PR contains the changes from the scheduled sync so you can review and merge.
          base: main
          branch: gh-actions/goodreads-sync-${{ github.run_id }}
